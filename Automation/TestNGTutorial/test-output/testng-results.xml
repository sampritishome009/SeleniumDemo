<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-24T22:08:31 IST" name="Loan Department" finished-at="2024-04-24T22:08:32 IST" duration-ms="317">
    <groups>
      <group name="Smoke">
        <method signature="day2.ploan()[pri:0, instance:test.day2@5ab956d7]" name="ploan" class="test.day2"/>
        <method signature="day3.MobileLoginCarLoan()[pri:0, instance:test.day3@231f98ef]" name="MobileLoginCarLoan" class="test.day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-04-24T22:08:31 IST" name="Car Loan" finished-at="2024-04-24T22:08:32 IST" duration-ms="317">
      <class name="test.day3">
        <test-method is-config="true" signature="BfSuite()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:31 IST" name="BfSuite" finished-at="2024-04-24T22:08:31 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="beforeClass" finished-at="2024-04-24T22:08:32 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="beforeevery" finished-at="2024-04-24T22:08:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileLoginCarLoan()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="MobileLoginCarLoan" finished-at="2024-04-24T22:08:32 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="afterevery" finished-at="2024-04-24T22:08:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="beforeevery" finished-at="2024-04-24T22:08:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileSignInCarLoan()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="MobileSignInCarLoan" finished-at="2024-04-24T22:08:32 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignInCarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="afterevery" finished-at="2024-04-24T22:08:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="beforeevery" finished-at="2024-04-24T22:08:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="MobileSignOutCarLoan" data-provider="getData" finished-at="2024-04-24T22:08:32 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="afterevery" finished-at="2024-04-24T22:08:32 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="beforeevery" finished-at="2024-04-24T22:08:32 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="MobileSignOutCarLoan" data-provider="getData" finished-at="2024-04-24T22:08:32 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="afterevery" finished-at="2024-04-24T22:08:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="beforeevery" finished-at="2024-04-24T22:08:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="MobileSignOutCarLoan" data-provider="getData" finished-at="2024-04-24T22:08:32 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="afterevery" finished-at="2024-04-24T22:08:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="beforeevery" finished-at="2024-04-24T22:08:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="WebCarLogin(java.lang.String)[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="WebCarLogin" finished-at="2024-04-24T22:08:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebCarLogin -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="afterevery" finished-at="2024-04-24T22:08:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.day3@231f98ef]" started-at="2024-04-24T22:08:32 IST" name="afterClass" finished-at="2024-04-24T22:08:32 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.day3 -->
      <class name="test.day1">
        <test-method is-config="true" signature="afSuite()[pri:0, instance:test.day1@738dc9b]" started-at="2024-04-24T22:08:32 IST" name="afSuite" finished-at="2024-04-24T22:08:32 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afSuite -->
      </class> <!-- test.day1 -->
    </test> <!-- Car Loan -->
    <test started-at="2024-04-24T22:08:31 IST" name="Personal Loan" finished-at="2024-04-24T22:08:32 IST" duration-ms="250">
      <class name="test.day4">
        <test-method signature="NewtravelLoan(java.lang.String)[pri:0, instance:test.day4@3646a422]" started-at="2024-04-24T22:08:32 IST" name="NewtravelLoan" finished-at="2024-04-24T22:08:32 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NewtravelLoan -->
      </class> <!-- test.day4 -->
      <class name="test.day2">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:test.day2@5ab956d7]" started-at="2024-04-24T22:08:32 IST" name="prerequisite" finished-at="2024-04-24T22:08:32 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="ploan()[pri:0, instance:test.day2@5ab956d7]" started-at="2024-04-24T22:08:32 IST" name="ploan" finished-at="2024-04-24T22:08:32 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.day2 -->
      <class name="test.day1">
        <test-method signature="Demo(java.lang.String,java.lang.String)[pri:0, instance:test.day1@738dc9b]" started-at="2024-04-24T22:08:32 IST" name="Demo" finished-at="2024-04-24T22:08:32 IST" duration-ms="40" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at test.day1.Demo(day1.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:test.day1@738dc9b]" started-at="2024-04-24T22:08:32 IST" name="lastExecution" finished-at="2024-04-24T22:08:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- test.day1 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
